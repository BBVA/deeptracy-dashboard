[
  {
    "id": "##ID##",
    "lib": "request",
    "version": "1.0.0",
    "cve": "2017.990",
    "description": "Node.js v4.0 through v4.8.3, all versions of v5.x, v6.0 through v6.11.0, v7.0 through v7.10.0, and v8.0 through v8.1.3 was susceptible to hash flooding remote DoS attacks as the HashTable seed was constant across a given released version of Node.js. This was a result of building with V8 snapshots enabled by default which caused the initially randomized seed to be overwritten on startup."
  }, {
    "id": "##ID##",
    "lib": "angular-core",
    "version": "1.0.0",
    "cve": "2017.990",
    "description": "Angular Core through v6.11.0, v7.0 through v7.10.0, and v8.0 through v8.1.3 was susceptible to hash flooding remote DoS attacks as the HashTable seed was constant across a given released version of Node.js. This was a result of building with V8 snapshots enabled by default which caused the initially randomized seed to be overwritten on startup."
  }, {
    "id": "##ID##",
    "lib": "request",
    "version": "1.0.1",
    "cve": "2017.990",
    "description": "Node.js v4.0 through v4.8.3, all versions of v5.x, v6.0 through v6.11.0, v7.0 through v7.10.0, and v8.0 through v8.1.3 was susceptible to hash flooding remote DoS attacks as the HashTable seed was constant across a given released version of Node.js. This was a result of building with V8 snapshots enabled by default which caused the initially randomized seed to be overwritten on startup."
  }, {
    "id": "##ID##",
    "lib": "angular-core",
    "version": "1.0.1",
    "cve": "2017.990",
    "description": "Aaaaaa Angular Core through v6.11.0, v7.0 through v7.10.0, and v8.0 through v8.1.3 was susceptible to hash flooding remote DoS attacks as the HashTable seed was constant across a given released version of Node.js. This was a result of building with V8 snapshots enabled by default which caused the initially randomized seed to be overwritten on startup."
  }, {
    "id": "##ID##",
    "lib": "request",
    "version": "1.0.1",
    "cve": "2017.990",
    "description": "BBbbbbb Node.js v4.0 through v4.8.3, all versions of v5.x, v6.0 through v6.11.0, v7.0 through v7.10.0, and v8.0 through v8.1.3 was susceptible to hash flooding remote DoS attacks as the HashTable seed was constant across a given released version of Node.js. This was a result of building with V8 snapshots enabled by default which caused the initially randomized seed to be overwritten on startup."
  }, {
    "id": "##ID##",
    "lib": "request",
    "version": "1.0.0",
    "cve": "2017.990",
    "description": "CCCCcccccc Node.js v4.0 through v4.8.3, all versions of v5.x, v6.0 through v6.11.0, v7.0 through v7.10.0, and v8.0 through v8.1.3 was susceptible to hash flooding remote DoS attacks as the HashTable seed was constant across a given released version of Node.js. This was a result of building with V8 snapshots enabled by default which caused the initially randomized seed to be overwritten on startup."
  }, {
    "id": "##ID##",
    "lib": "angular-core",
    "version": "1.0.0",
    "cve": "2017.990",
    "description": "DDddddd Angular Core through v6.11.0, v7.0 through v7.10.0, and v8.0 through v8.1.3 was susceptible to hash flooding remote DoS attacks as the HashTable seed was constant across a given released version of Node.js. This was a result of building with V8 snapshots enabled by default which caused the initially randomized seed to be overwritten on startup."
  }, {
    "id": "##ID##",
    "lib": "request",
    "version": "1.0.1",
    "cve": "2017.990",
    "description": "EEEEeeeeee  Node.js v4.0 through v4.8.3, all versions of v5.x, v6.0 through v6.11.0, v7.0 through v7.10.0, and v8.0 through v8.1.3 was susceptible to hash flooding remote DoS attacks as the HashTable seed was constant across a given released version of Node.js. This was a result of building with V8 snapshots enabled by default which caused the initially randomized seed to be overwritten on startup."
  }, {
    "id": "##ID##",
    "lib": "request",
    "version": "1.0.0",
    "cve": "2017.990",
    "description": "FFfffffff Node.js v4.0 through v4.8.3, all versions of v5.x, v6.0 through v6.11.0, v7.0 through v7.10.0, and v8.0 through v8.1.3 was susceptible to hash flooding remote DoS attacks as the HashTable seed was constant across a given released version of Node.js. This was a result of building with V8 snapshots enabled by default which caused the initially randomized seed to be overwritten on startup."
  }, {
    "id": "##ID##",
    "lib": "angular-core",
    "version": "1.0.0",
    "cve": "2017.990",
    "description": "Angular Core through v6.11.0, v7.0 through v7.10.0, and v8.0 through v8.1.3 was susceptible to hash flooding remote DoS attacks as the HashTable seed was constant across a given released version of Node.js. This was a result of building with V8 snapshots enabled by default which caused the initially randomized seed to be overwritten on startup."
  }, {
    "id": "##ID##",
    "lib": "request",
    "version": "1.0.1",
    "cve": "2017.990",
    "description": "Node.js v4.0 through v4.8.3, all versions of v5.x, v6.0 through v6.11.0, v7.0 through v7.10.0, and v8.0 through v8.1.3 was susceptible to hash flooding remote DoS attacks as the HashTable seed was constant across a given released version of Node.js. This was a result of building with V8 snapshots enabled by default which caused the initially randomized seed to be overwritten on startup."
  }, {
    "id": "##ID##",
    "lib": "angular-core",
    "version": "1.0.1",
    "cve": "2017.990",
    "description": "Angular Core through v6.11.0, v7.0 through v7.10.0, and v8.0 through v8.1.3 was susceptible to hash flooding remote DoS attacks as the HashTable seed was constant across a given released version of Node.js. This was a result of building with V8 snapshots enabled by default which caused the initially randomized seed to be overwritten on startup."
  }, {
   "id": "##ID##",
    "lib": "request",
    "version": "1.0.1",
    "cve": "2017.990",
    "description": "Node.js v4.0 through v4.8.3, all versions of v5.x, v6.0 through v6.11.0, v7.0 through v7.10.0, and v8.0 through v8.1.3 was susceptible to hash flooding remote DoS attacks as the HashTable seed was constant across a given released version of Node.js. This was a result of building with V8 snapshots enabled by default which caused the initially randomized seed to be overwritten on startup."
  }, {
   "id": "##ID##",
    "lib": "request",
    "version": "1.0.0",
    "cve": "2017.990",
    "description": "Node.js v4.0 through v4.8.3, all versions of v5.x, v6.0 through v6.11.0, v7.0 through v7.10.0, and v8.0 through v8.1.3 was susceptible to hash flooding remote DoS attacks as the HashTable seed was constant across a given released version of Node.js. This was a result of building with V8 snapshots enabled by default which caused the initially randomized seed to be overwritten on startup."
  }, {
    "id": "##ID##",
    "lib": "angular-core",
    "version": "1.0.0",
    "cve": "2017.990",
    "description": "Angular Core through v6.11.0, v7.0 through v7.10.0, and v8.0 through v8.1.3 was susceptible to hash flooding remote DoS attacks as the HashTable seed was constant across a given released version of Node.js. This was a result of building with V8 snapshots enabled by default which caused the initially randomized seed to be overwritten on startup."
  }, {
    "id": "##ID##",
    "lib": "request",
    "version": "1.0.1",
    "cve": "2017.990",
    "description": "Node.js v4.0 through v4.8.3, all versions of v5.x, v6.0 through v6.11.0, v7.0 through v7.10.0, and v8.0 through v8.1.3 was susceptible to hash flooding remote DoS attacks as the HashTable seed was constant across a given released version of Node.js. This was a result of building with V8 snapshots enabled by default which caused the initially randomized seed to be overwritten on startup."
  }, {
   "id": "##ID##",
    "lib": "angular-core",
    "version": "1.0.1",
    "cve": "2017.990",
    "description": "Angular Core through v6.11.0, v7.0 through v7.10.0, and v8.0 through v8.1.3 was susceptible to hash flooding remote DoS attacks as the HashTable seed was constant across a given released version of Node.js. This was a result of building with V8 snapshots enabled by default which caused the initially randomized seed to be overwritten on startup."
  }, {
    "id": "##ID##",
    "lib": "request",
    "version": "1.0.1",
    "cve": "2017.990",
    "description": "Node.js v4.0 through v4.8.3, all versions of v5.x, v6.0 through v6.11.0, v7.0 through v7.10.0, and v8.0 through v8.1.3 was susceptible to hash flooding remote DoS attacks as the HashTable seed was constant across a given released version of Node.js. This was a result of building with V8 snapshots enabled by default which caused the initially randomized seed to be overwritten on startup."
  }
]
